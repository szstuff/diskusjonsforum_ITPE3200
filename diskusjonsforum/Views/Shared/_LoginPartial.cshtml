@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav justify-content-center align-items-center fs-5 flex-grow-1 pe-3">
    @{ var user = await UserManager.GetUserAsync(User); }
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item mx-2">
            @if (user != null && await UserManager.IsInRoleAsync(user, "Admin"))
            {
                <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Table" style="font-size: 12px;"> <b>Admin:</b>See users</a>
            }
        </li>
    
        <li class="nav-item mx-2">
            <a id="manage" class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage" style="font-size: 15px;">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item mx-2">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="login-text nav-link text-light" title="Logout">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="d-flex flex-column flex-lg-row justify-content-center align-items-center gap-3">
            <a class="login-text nav-link text-light" id="login" asp-area="Identity" asp-page="/Account/Login" title="Login">Login</a>
            <a class="register-text nav-link text-light px-3 py-1 rounded-4 text-decoration-none" style="background-color:#003334;" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
    }
</ul>